{"version":3,"sources":["component/Button/ButtonStyles.module.css","component/Searchbar/Searchbar.jsx","services/imagesApi.jsx","component/ImageGalleryItem/ImageGalleryItem.jsx","component/ImageGallery/imageGaleryList.jsx","component/Modal/Modal.jsx","component/Button/Button.jsx","component/ImageGallery/ImageGallery.jsx","component/App/App.jsx","index.js"],"names":["module","exports","Searchbar","className","onSubmit","this","props","getImages","type","autoComplete","autoFocus","placeholder","onChange","onHandleChange","value","query","Component","fetchImagesQuery","searchQuery","page","key","axios","get","then","response","data","hits","ImageGalleryItem","image","webformatURL","tags","largeImageURL","src","alt","data-largeimg","Images","images","modalIsOpen","onClick","map","id","Modal","closeModalEsk","event","code","closeModal","window","addEventListener","removeEventListener","bigImg","Button","onLoadMore","styles","button","ImageGallery","state","isLoader","modal","setState","target","preventDefault","finally","prevState","nodeName","dataset","largeimg","scrollTo","top","document","documentElement","scrollHeight","behavior","color","height","width","timeout","length","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"8FACAA,EAAOC,QAAU,CAAC,OAAS,6BAA6B,OAAS,+B,mJC4BlDC,E,uKAxBP,OACE,wBAAQC,UAAU,YAAlB,SACF,uBAAMA,UAAU,aAAaC,SAAUC,KAAKC,MAAMC,UAAlD,UACJ,wBAAQC,KAAK,SAASL,UAAU,oBAAhC,SACE,sBAAMA,UAAU,0BAAhB,sBAGF,uBACEA,UAAU,mBACVK,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,2BACFC,SAAUP,KAAKC,MAAMO,eACrBC,MAAOT,KAAKC,MAAMS,iB,GAjBVC,a,iBCUTC,EAVU,SAACC,GAA4B,IAAfC,EAAc,uDAAP,EACpCC,EAAM,qCACZ,OAAOC,IACFC,IADE,sCAEgCJ,EAFhC,iBAEoDC,EAFpD,gBAEgEC,EAFhE,yDAIFG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,SCKzBC,EAXU,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAEhBC,EAAqCD,EAArCC,aAAcC,EAAuBF,EAAvBE,KAAMC,EAAiBH,EAAjBG,cAE5B,OACI,oBAAI5B,UAAU,mBAAd,SACI,qBAAK6B,IAAKH,EAAcI,IAAKH,EAAMI,gBAAeH,EAAe5B,UAAU,8BCUxEgC,EAfA,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,YAErB,OACI,oBAAIlC,UAAU,eAAemC,QAASD,EAAtC,SACKD,EAAOG,KAAI,SAAAX,GAAK,OACb,cAAC,EAAD,CAEIA,MAAOA,GADNA,EAAMY,U,iBCqBZC,E,4MA1BXC,cAAgB,SAACC,GACM,WAAfA,EAAMC,MACN,EAAKtC,MAAMuC,c,kEAMfC,OAAOC,iBAAiB,UAAW1C,KAAKqC,iB,6CAIxCI,OAAOE,oBAAoB,UAAW3C,KAAKqC,iB,+BAI3C,OACI,qBAAKvC,UAAU,UAAf,SACA,qBAAKA,UAAU,QAAf,SACI,qBAAK6B,IAAK3B,KAAKC,MAAM2C,OAAQhB,IAAI,a,GArB7BjB,a,iBCMLkC,EALA,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,WACb,OACI,wBAAQhD,UAAWiD,IAAOC,OAAQ7C,KAAK,SAAS8B,QAASa,EAAzD,wBCoFOG,E,4MA/EXC,MAAQ,CACJxC,MAAO,GACPI,KAAM,EACNiB,OAAQ,GACRoB,UAAU,EACVC,OAAO,EACPR,OAAQ,KACRhB,IAAK,I,EAGTpB,eAAiB,SAAC8B,GAClB,EAAKe,SAAS,CAAC3C,MAAO4B,EAAMgB,OAAO7C,S,EAGnCP,UAAY,SAACoC,GACTA,EAAMiB,iBACN,EAAKF,SAAU,CAACF,UAAU,IAC1BvC,EAAiB,EAAKsC,MAAMxC,OAC3BQ,MAAK,SAACE,GAAD,OAAS,EAAKiC,SAAS,CAACtB,OAAO,YAAKX,GAAON,KAAM,OACtD0C,SAAQ,kBAAM,EAAKH,SAAS,CAAEF,UAAU,Q,EAU3CL,WAAa,SAACR,GACZA,EAAMiB,iBACN,EAAKF,SAAU,CAACF,UAAU,IAExBvC,EAAiB,EAAKsC,MAAMxC,MAAO,EAAKwC,MAAMpC,MAE/CI,MAAK,SAACE,GAAD,OAAU,EAAKiC,UAAS,SAAAI,GAAS,MAAI,CAAE1B,OAAO,GAAD,mBAAM0B,EAAU1B,QAAhB,YAA2BX,IAAON,KAAM2C,EAAU3C,KAAO,SAC3G0C,SAAQ,kBAAM,EAAKH,SAAS,CAAEF,UAAU,Q,EAI7CnB,YAAc,SAACM,GACmB,QAA1BA,EAAMgB,OAAOI,WAGb,EAAKL,SAAS,CAAED,OAAO,IACvB,EAAKC,SAAS,CAAET,OAAQN,EAAMgB,OAAOK,QAAQC,a,EAKrDpB,WAAa,WACT,EAAKa,SAAU,CAACD,OAAO,K,mEA5BvBX,OAAOoB,SAAS,CACZC,IAAKC,SAASC,gBAAgBC,aAC9BC,SAAU,a,+BA6BR,IAAD,EAC4ClE,KAAKkD,MAA/CxC,EADF,EACEA,MAAOqB,EADT,EACSA,OAAQoB,EADjB,EACiBA,SAAUC,EAD3B,EAC2BA,MAAOR,EADlC,EACkCA,OACvC,OACI,qCACA,cAAC,EAAD,CACIpC,eAAgBR,KAAKQ,eACrBE,MAAOA,EACPR,UAAWF,KAAKE,YAEfiD,GAAY,cAAC,IAAD,CACrBhD,KAAK,OACLgE,MAAM,UACNC,OAAQ,IACRC,MAAO,IACPC,QAAS,MAED,cAAC,EAAD,CAAQvC,OAAQA,EAAQC,YAAahC,KAAKgC,cACzCoB,GAAS,cAAC,EAAD,CACNZ,WAAYxC,KAAKwC,WACjBI,OAAQA,IACXb,EAAOwC,OAAS,IAAMpB,GAAa,cAAC,EAAD,CAAQL,WAAY9C,KAAK8C,oB,GA5ElDnC,aCGZ6D,EAPJ,WAEH,OACI,cAAC,EAAD,KCDZC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFZ,SAASa,eAAe,W","file":"static/js/main.313193b3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ButtonStyles_button__3zBnD\",\"Button\":\"ButtonStyles_Button__1FMbX\"};","import React, {Component} from 'react';\r\n\r\nclass Searchbar extends Component{\r\n\r\n    render() {\r\n        return (\r\n          <header className=\"Searchbar\"> \r\n        <form className=\"SearchForm\" onSubmit={this.props.getImages}>\r\n    <button type=\"submit\" className=\"SearchForm-button\">\r\n      <span className=\"SearchForm-button-label\">Search</span>\r\n    </button>\r\n\r\n    <input\r\n      className=\"SearchForm-input\"\r\n      type=\"text\"\r\n      autoComplete=\"off\"\r\n      autoFocus\r\n      placeholder=\"Search images and photos\"\r\n                onChange={this.props.onHandleChange}\r\n                value={this.props.query}\r\n                \r\n    />\r\n  </form>\r\n</header>\r\n    )\r\n}\r\n\r\n}\r\n\r\nexport default Searchbar;","import axios from 'axios';\r\n\r\nconst fetchImagesQuery = (searchQuery, page = 1 ) => {\r\n    const key = '19534964-3b894cbb98b7a7b0f6f1cef4d';\r\n    return axios\r\n        .get(\r\n            ` https://pixabay.com/api/?q=${searchQuery}&page=${page}&key=${key}&image_type=photo&orientation=horizontal&per_page=12`,\r\n        )\r\n        .then(response => response.data.hits);\r\n};\r\n\r\n\r\nexport default fetchImagesQuery ;","import React from \"react\";\r\n\r\nconst ImageGalleryItem = ({ image }) => {\r\n    \r\n    const { webformatURL, tags, largeImageURL} = image\r\n    \r\n    return (\r\n        <li className=\"ImageGalleryItem\">\r\n            <img src={webformatURL} alt={tags} data-largeimg={largeImageURL} className=\"ImageGalleryItem-image\"  />\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default ImageGalleryItem;","import React from 'react';\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\n\r\nconst Images = ({images, modalIsOpen}) => {\r\n\r\n    return (\r\n        <ul className=\"ImageGallery\" onClick={modalIsOpen}>\r\n            {images.map(image =>\r\n                <ImageGalleryItem\r\n                key={image.id}\r\n                    image={image}\r\n                    \r\n\r\n            />)}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default Images;","import React, {Component} from 'react'\r\n\r\nclass Modal extends Component {\r\n\r\n    closeModalEsk = (event) => {\r\n        if (event.code === 'Escape') {\r\n            this.props.closeModal()\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() { \r\n        window.addEventListener('keydown', this.closeModalEsk)\r\n    }\r\n    \r\n     componentWillUnmount() {\r\n        window.removeEventListener('keydown', this.closeModalEsk);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Overlay\">\r\n            <div className=\"Modal\">\r\n                <img src={this.props.bigImg} alt=\"\" />\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Modal;","import React from 'react';\r\nimport styles from '../../component/Button/ButtonStyles.module.css'\r\n\r\nconst Button = ({onLoadMore}) => {\r\n    return (\r\n        <button className={styles.button} type=\"button\" onClick={onLoadMore}>Load more</button>\r\n    )\r\n}\r\nexport default Button;","import React, {Component} from 'react';\r\nimport Searchbar from '../Searchbar/Searchbar';\r\nimport fetchImagesQuery from '../../services/imagesApi'\r\nimport Images from '../ImageGallery/imageGaleryList';\r\nimport Loader from \"react-loader-spinner\"\r\nimport Modal from '../Modal/Modal'\r\nimport Button from '../Button/Button';\r\n\r\nclass ImageGallery extends Component {\r\n    \r\n    state = {\r\n        query: '',\r\n        page: 1,\r\n        images: [],\r\n        isLoader: false,\r\n        modal: false,\r\n        bigImg: null,\r\n        alt: '',\r\n    }\r\n\r\n    onHandleChange = (event) => {   \r\n    this.setState({query: event.target.value})\r\n    }\r\n\r\n    getImages = (event) => {\r\n        event.preventDefault()\r\n        this.setState ({isLoader: true});\r\n        fetchImagesQuery(this.state.query)\r\n        .then((data)=> this.setState({images: [...data], page: 2}))\r\n        .finally(() => this.setState({ isLoader: false }));\r\n    }\r\n    componentDidUpdate() {\r\n    \r\n        window.scrollTo({\r\n            top: document.documentElement.scrollHeight,\r\n            behavior: 'smooth',\r\n        })\r\n}\r\n\r\n      onLoadMore = (event) => {\r\n        event.preventDefault()\r\n        this.setState ({isLoader: true});\r\n        \r\n          fetchImagesQuery(this.state.query, this.state.page)\r\n            \r\n        .then((data) => this.setState(prevState =>({ images: [...prevState.images, ...data], page: prevState.page + 1 })))\r\n        .finally(() => this.setState({ isLoader: false }));\r\n    } \r\n\r\n        \r\n    modalIsOpen = (event) => {\r\n        if (event.target.nodeName !== 'IMG') {\r\n            return\r\n        } else {\r\n            this.setState({ modal: true })\r\n            this.setState({ bigImg: event.target.dataset.largeimg })\r\n        };\r\n        \r\n    }\r\n\r\n    closeModal = () => {\r\n        this.setState ({modal: false})\r\n    }\r\n    \r\n    render() {\r\n        const {query, images, isLoader, modal, bigImg} = this.state\r\n        return (\r\n            <>\r\n            <Searchbar\r\n                onHandleChange={this.onHandleChange}\r\n                query={query}\r\n                getImages={this.getImages}\r\n                />\r\n                {isLoader && <Loader\r\n        type=\"Puff\"\r\n        color=\"#00BFFF\"\r\n        height={100}\r\n        width={100}\r\n        timeout={3000} \r\n      />}\r\n                <Images images={images} modalIsOpen={this.modalIsOpen}/>\r\n                {modal && <Modal \r\n                    closeModal={this.closeModal}\r\n                    bigImg={bigImg} />}\r\n                {images.length > 0 && !isLoader && (<Button onLoadMore={this.onLoadMore} />)}\r\n        </>\r\n        )\r\n    }\r\n}\r\nexport default ImageGallery;","import React from 'react';\r\nimport ImageGallery from '../ImageGallery/ImageGallery';\r\n\r\n\r\nconst App =() => {\r\n\r\n        return (\r\n            <ImageGallery />\r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from '../src/component/App/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}